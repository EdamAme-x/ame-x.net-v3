---
import { SEO } from "astro-seo";
import { ViewTransitions } from "astro:transitions";
import StyleContainer from "./styleContainer.astro";
import ThemeProvider from "./theme/provider.astro";
import { MD6 } from "@/src/utils/md6";
import Header from "./header/index.astro";

interface Props {
	title?: string;
	description?: string;
	icon?: string;
}

const {
	title = "AMEX NET",
	description = "Offical website of @amex2189 | ame-x.net",
	icon = "/favicon.svg",
} = Astro.props;

const iconFullsizeURL = new URL(icon, Astro.url).href;

const parseHash = (input: string, index = 2): string => {
	return index <= 0 ? input : parseHash((MD6(encodeURIComponent(input))), index - 1);
};

const renderDate = new Date().toISOString();
const renderHash = parseHash(crypto.randomUUID());

---

<html lang="en_US">
	<head prefix="og: http://ogp.me/ns# website: http://ogp.me/ns/website#">
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<Fragment
			set:html={`<!--
    ____________________________________________________________
    |                                                          |
    | Server Render Date : ${renderDate}            |
    | Server Render Hash : ${renderHash}    |
    | Please follow github.com/EdamAme-x                       |
    |__________________________________________________________|
-->`}
		/>
		<SEO
			{title}
			{description}
			openGraph={{
				basic: {
					title,
					type: "website",
					image: iconFullsizeURL,
				},
			}}
			twitter={{
				creator: "@amex2189",
				image: iconFullsizeURL,
				imageAlt: title,
				card: "summary_large_image",
				site: "@amex2189",
				title,
				description,
			}}
			extend={{
				link: [
					{ rel: "icon", href: icon },
					{ rel: "sitemap", href: "/sitemap-index.xml" },
				],
				meta: [{ name: "createdBy", content: "@amex2189" }, { name: "generator", content: Astro.generator }],
			}}
		/>
		<ViewTransitions />
		<StyleContainer />
		<ThemeProvider />
	</head>
	<body>
		<Header />
		<slot />
	</body>
</html>
